# Rate Limiting Configuration for Nginx
# Protects against DDoS and abuse

# Define rate limiting zones
# General requests - 10 requests per second, burst of 50
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

# API requests - 5 requests per second, burst of 20
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

# File uploads - 1 request per second, burst of 10
limit_req_zone $binary_remote_addr zone=files:10m rate=1r/s;

# External API - 1 request per 2 seconds, burst of 5
limit_req_zone $binary_remote_addr zone=external:10m rate=30r/m;

# Login attempts - 1 request per 5 seconds, burst of 3
limit_req_zone $binary_remote_addr zone=login:10m rate=12r/m;

# Registration - 1 request per 10 seconds, burst of 2
limit_req_zone $binary_remote_addr zone=register:10m rate=6r/m;

# Password reset - 1 request per minute, burst of 2
limit_req_zone $binary_remote_addr zone=password_reset:10m rate=1r/m;

# WebSocket connections - 5 per minute
limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/m;

# Admin endpoints - 1 request per 10 seconds
limit_req_zone $binary_remote_addr zone=admin:10m rate=6r/m;

# Search requests - 2 requests per second
limit_req_zone $binary_remote_addr zone=search:10m rate=2r/s;

# Contact/support forms - 1 request per minute
limit_req_zone $binary_remote_addr zone=contact:10m rate=1r/m;

# Connection limits
# Limit number of connections per IP
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Limit number of connections to server block
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

# Apply connection limits
limit_conn conn_limit_per_ip 20;
limit_conn conn_limit_per_server 1000;

# Rate limit status codes
limit_req_status 429;
limit_conn_status 429;

# Additional rate limiting based on request patterns
# Slow down clients making too many requests
map $binary_remote_addr $limit_key {
    default $binary_remote_addr;
    ~^192\.168\. "";  # Don't rate limit local network
    ~^10\. "";        # Don't rate limit private network
    ~^172\.16\. "";   # Don't rate limit private network
}

# Rate limit based on user agent patterns
map $http_user_agent $bad_bot {
    default 0;
    ~*bot 1;
    ~*spider 1;
    ~*crawler 1;
    ~*wget 1;
    ~*curl 1;
    "" 1;  # Empty user agent
}

# Rate limit bots more strictly
limit_req_zone $limit_key zone=bots:10m rate=1r/s;

# Whitelist certain IPs from rate limiting
geo $whitelist {
    default 0;
    127.0.0.1 1;        # Localhost
    10.0.0.0/8 1;       # Private network
    172.16.0.0/12 1;    # Private network
    192.168.0.0/16 1;   # Private network
    # Add your monitoring/CDN IPs here
    # 203.0.113.0/24 1;  # Example CDN range
}

# Dynamic rate limiting based on request frequency
map $request_uri $dynamic_limit {
    default "";
    ~*/api/auth/login$ login;
    ~*/api/auth/register$ register;
    ~*/api/auth/password-reset$ password_reset;
    ~*/api/files/upload$ files;
    ~*/api/external/ external;
    ~*/api/admin/ admin;
    ~*/api/search$ search;
    ~*/api/contact$ contact;
    ~*/ws$ websocket;
}

# Rate limiting with geographic restrictions
# Block requests from certain countries (optional)
geo $blocked_country {
    default 0;
    # Add country-specific blocks if needed
    # Example: Block specific IP ranges
    # 198.51.100.0/24 1;
}

# Custom rate limiting for different content types
map $content_type $upload_limit {
    default files;
    ~image/ files;
    ~video/ files;
    ~audio/ files;
    ~application/pdf files;
    ~application/zip files;
}

# Burst configuration with delay
# delay=5 means requests beyond rate are delayed rather than dropped
# This provides better user experience while maintaining protection